#
# This GitHub action runs basic linting checks for Packer.
#

name: "Go Validate"

on: [ workflow_dispatch, push ]

permissions:
  contents: read

jobs:
  get-go-version:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.get-go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v2
      - name: 'Determine Go version'
        id: get-go-version
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "::set-output name=go-version::$(cat .go-version)"
  check-mod-tidy:
    runs-on: ubuntu-latest
    name: Go Mod Tidy
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - run: go mod tidy
  check-lint:
    runs-on: ubuntu-latest
    name: Go Lint
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - run: echo "$GITHUB_SHA"
      - run: git fetch --all
      - run: echo $(git merge-base origin/main $GITHUB_SHA)
      - run: |
            echo "==> Updating linter dependencies..."
            curl -sSfL -q https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
            echo "==> Running linter on newly added Go source files..."
            golangci-lint run --new-from-rev=$(shell git merge-base origin/main HEAD) ./...
  check-fmt:
    runs-on: ubuntu-latest
    name: Go fmt check
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - run: |
          go fmt ./...
          echo "==> Checking that code complies with go fmt requirements..."
          git diff --exit-code; if [ $$? -eq 1 ]; then \
          echo "Found files that are not fmt'ed."; \
          echo "You can use the command: \`go fmt ./...\` to reformat code."; \
          exit 1; \
          fi
  check-generate:
    runs-on: ubuntu-latest
    name: Generate check
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - run: make generate
